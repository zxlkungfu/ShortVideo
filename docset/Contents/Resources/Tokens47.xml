<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/_AFURLSessionTaskSwizzling.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/_AFURLSessionTaskSwizzling</TokenIdentifier>
			<Abstract type="html">A workaround for issues related to key-value observing the state of an NSURLSessionTask.</Abstract>
			<DeclaredIn>AFURLSessionManager.m</DeclaredIn>
            
			
			<NodeRef refid="47"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/_AFURLSessionTaskSwizzling/swizzleResumeAndSuspendMethodForClass:</TokenIdentifier>
			<Abstract type="html">         iOS 7 and iOS 8 differ in NSURLSessionTask implementation, which makes the next bit of code a bit tricky.
         Many Unit Tests have been built to validate as much of this behavior has possible.
         Here is what we know:
            - NSURLSessionTasks are implemented with class clusters, meaning the class you request from the API isn&apos;t actually the type of class you will get back.
            - Simply referencing [NSURLSessionTask class] will not work. You need to ask an NSURLSession to actually create an object, and grab the class from there.
            - On iOS 7, localDataTask is a NSCFLocalDataTask, which inherits from NSCFLocalSessionTask, which inherits from __NSCFURLSessionTask.
            - On iOS 8, localDataTask is a NSCFLocalDataTask, which inherits from NSCFLocalSessionTask, which inherits from NSURLSessionTask.
            - On iOS 7, NSCFLocalSessionTask and NSCFURLSessionTask are the only two classes that have their own implementations of resume and suspend, and __NSCFLocalSessionTask DOES NOT CALL SUPER. This means both classes need to be swizzled.
            - On iOS 8, NSURLSessionTask is the only class that implements resume and suspend. This means this is the only class that needs to be swizzled.
            - Because NSURLSessionTask is not involved in the class hierarchy for every version of iOS, its easier to add the swizzled methods to a dummy class and manage them there.
        
         Some Assumptions:
            - No implementations of resume or suspend call super. If this were to change in a future version of iOS, we&apos;d need to handle it.
            - No background task classes override resume or suspend
         
         The current solution:
            1) Grab an instance of __NSCFLocalDataTask by asking an instance of NSURLSession for a data task.
            2) Grab a pointer to the original implementation of af_resume
            3) Check to see if the current class has an implementation of resume. If so, continue to step 4.
            4) Grab the super class of the current class.
            5) Grab a pointer for the current class to the current implementation of resume.
            6) Grab a pointer for the super class to the current implementation of resume.
            7) If the current class implementation of resume is not equal to the super class implementation of resume AND the current implementation of resume is not equal to the original implementation of af_resume, THEN swizzle the methods
            8) Set the current class to the super class, and repeat steps 3-8
         </Abstract>
			<DeclaredIn>AFURLSessionManager.m</DeclaredIn>
			
			<Declaration>+ (void)swizzleResumeAndSuspendMethodForClass:(Class)theClass</Declaration>
			
			
			<Anchor>//api/name/swizzleResumeAndSuspendMethodForClass:</Anchor>
            <NodeRef refid="47"/>
		</Token>
		
        
        
	</File>
</Tokens>