<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AFNetworkActivityIndicatorManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AFNetworkActivityIndicatorManager</TokenIdentifier>
			<Abstract type="html">AFNetworkActivityIndicatorManager manages the state of the network activity indicator in the status bar. When enabled, it will listen for notifications indicating that a session task has started or finished, and start or stop animating the indicator accordingly. The number of active requests is incremented and decremented much like a stack or a semaphore, and the activity indicator will animate so long as that number is greater than zero.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
            
			
			<NodeRef refid="11"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/setEnabled:</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the manager is enabled.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=isEnabled) BOOL enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/isEnabled</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the manager is enabled.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=isEnabled) BOOL enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFNetworkActivityIndicatorManager/enabled</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the manager is enabled.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=isEnabled) BOOL enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/setNetworkActivityIndicatorVisible:</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the network activity indicator manager is currently active.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (readonly, nonatomic, assign, getter=isNetworkActivityIndicatorVisible) BOOL networkActivityIndicatorVisible</Declaration>
			
			
			<Anchor>//api/name/networkActivityIndicatorVisible</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/isNetworkActivityIndicatorVisible</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the network activity indicator manager is currently active.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (readonly, nonatomic, assign, getter=isNetworkActivityIndicatorVisible) BOOL networkActivityIndicatorVisible</Declaration>
			
			
			<Anchor>//api/name/networkActivityIndicatorVisible</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFNetworkActivityIndicatorManager/networkActivityIndicatorVisible</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the network activity indicator manager is currently active.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (readonly, nonatomic, assign, getter=isNetworkActivityIndicatorVisible) BOOL networkActivityIndicatorVisible</Declaration>
			
			
			<Anchor>//api/name/networkActivityIndicatorVisible</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/setActivationDelay:</TokenIdentifier>
			<Abstract type="html">A time interval indicating the minimum duration of networking activity that should occur before the activity indicator is displayed. The default value 1 second. If the network activity indicator should be displayed immediately when network activity occurs, this value should be set to 0 seconds.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval activationDelay</Declaration>
			
			
			<Anchor>//api/name/activationDelay</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/activationDelay</TokenIdentifier>
			<Abstract type="html">A time interval indicating the minimum duration of networking activity that should occur before the activity indicator is displayed. The default value 1 second. If the network activity indicator should be displayed immediately when network activity occurs, this value should be set to 0 seconds.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval activationDelay</Declaration>
			
			
			<Anchor>//api/name/activationDelay</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFNetworkActivityIndicatorManager/activationDelay</TokenIdentifier>
			<Abstract type="html">A time interval indicating the minimum duration of networking activity that should occur before the activity indicator is displayed. The default value 1 second. If the network activity indicator should be displayed immediately when network activity occurs, this value should be set to 0 seconds.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval activationDelay</Declaration>
			
			
			<Anchor>//api/name/activationDelay</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/setCompletionDelay:</TokenIdentifier>
			<Abstract type="html">A time interval indicating the duration of time of no networking activity required before the activity indicator is disabled. This allows for continuous display of the network activity indicator across multiple requests. The default value is 0.17 seconds.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval completionDelay</Declaration>
			
			
			<Anchor>//api/name/completionDelay</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/completionDelay</TokenIdentifier>
			<Abstract type="html">A time interval indicating the duration of time of no networking activity required before the activity indicator is disabled. This allows for continuous display of the network activity indicator across multiple requests. The default value is 0.17 seconds.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval completionDelay</Declaration>
			
			
			<Anchor>//api/name/completionDelay</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AFNetworkActivityIndicatorManager/completionDelay</TokenIdentifier>
			<Abstract type="html">A time interval indicating the duration of time of no networking activity required before the activity indicator is disabled. This allows for continuous display of the network activity indicator across multiple requests. The default value is 0.17 seconds.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval completionDelay</Declaration>
			
			
			<Anchor>//api/name/completionDelay</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AFNetworkActivityIndicatorManager/sharedManager</TokenIdentifier>
			<Abstract type="html">Returns the shared network activity indicator manager object for the system.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedManager</Declaration>
			
			<ReturnValue><Abstract type="html">The systemwide network activity indicator manager.</Abstract></ReturnValue>
			<Anchor>//api/name/sharedManager</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/incrementActivityCount</TokenIdentifier>
			<Abstract type="html">Increments the number of active network requests. If this number was zero before incrementing, this will start animating the status bar network activity indicator.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>- (void)incrementActivityCount</Declaration>
			
			
			<Anchor>//api/name/incrementActivityCount</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/decrementActivityCount</TokenIdentifier>
			<Abstract type="html">Decrements the number of active network requests. If this number becomes zero after decrementing, this will stop animating the status bar network activity indicator.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>- (void)decrementActivityCount</Declaration>
			
			
			<Anchor>//api/name/decrementActivityCount</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AFNetworkActivityIndicatorManager/setNetworkingActivityActionWithBlock:</TokenIdentifier>
			<Abstract type="html">Set the a custom method to be executed when the network activity indicator manager should be hidden/shown. By default, this is null, and the UIApplication Network Activity Indicator will be managed automatically. If this block is set, it is the responsiblity of the caller to manager the network activity indicator going forward.</Abstract>
			<DeclaredIn>AFNetworkActivityIndicatorManager.h</DeclaredIn>
			
			<Declaration>- (void)setNetworkingActivityActionWithBlock:(nullable void ( ^ ) ( BOOL networkActivityIndicatorVisible ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">A block to be executed when the network activity indicator status changes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setNetworkingActivityActionWithBlock:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
        
        
	</File>
</Tokens>